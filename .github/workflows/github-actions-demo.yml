name: GitHub Actions Demo
on:
  push:
    branches:
      - main

env:
  node-version: 16
  PROJECT_ID: "gh-actions-express-app"
  SERVER_NAME: "my_server"

jobs:
  build-push-docker-hub:
    name: Build and push to docker hub
    if: startsWith(github.event.head_commit.message, '[promote-') == false
    runs-on: ubuntu-latest
    steps:
    - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

    - name: Add GITHUB_SHA_SHORT env property with commit short sha
        run: echo "GITHUB_SHA_SHORT=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version}}

      # - name: Authenticate with private NPM package
      #   run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.PAT_FOR_NPM }}" >> ~/.npmrc

      - name: Get app version from commit message
        id: version-info
        if: startsWith(github.event.head_commit.message, '[mark-')
        run: >-
          echo "APP_VERSION=$(
            echo ${{github.event.head_commit.message}} |
            sed -n 's/.*\[mark-\(v[0-9][0-9\.]*\)\].*/\1/p'
          )" >> $GITHUB_OUTPUT

      - name: Install NPM dependencies
        run: |
          npm i

      - name: Build the Docker image
        run: docker build . --tag charupraneeth/${{ env.PROJECT_ID }}:${{ steps.date.outputs.date }}-${{ env.GITHUB_SHA_SHORT }}

      - name: Add version tag
        if: steps.version-info.outputs.APP_VERSION != ''
        run: docker tag charupraneeth/${{ env.PROJECT_ID }}:${{ steps.date.outputs.date }}-${{ env.GITHUB_SHA_SHORT }}  charupraneeth/${{ env.PROJECT_ID }}:${{ steps.version-info.outputs.APP_VERSION }}

      - name: Add latest tag
        run: docker tag charupraneeth/${{ env.PROJECT_ID }}:${{ steps.date.outputs.date }}-${{ env.GITHUB_SHA_SHORT }} charupraneeth/${{ env.PROJECT_ID }}:latest

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push the Docker image to Docker hub
        run: docker push charupraneeth/${{ env.PROJECT_ID }} --all-tags

      - name: Create SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/${{ env.SERVER_NAME }}.key
          sudo chmod 600 ~/.ssh/${{ env.SERVER_NAME }}.key
        shell: bash

      - name: Scan the public SSH host keys
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
        shell: bash

      - name: Create SSH config
        run: |
          cat >>~/.ssh/config <<END
          Host ${{ env.SERVER_NAME }}
            HostName ${{ secrets.SSH_HOST }}
            Port 22
            User ${{ secrets.SSH_USER }}
            IdentityFile ~/.ssh/${{ env.SERVER_NAME }}.key
          END
        shell: bash

      - name: Create project directory if not exists
        run: ssh ${{ env.SERVER_NAME}} mkdir -p /home/charp/${{ env.PROJECT_ID }}

      - name: Move docker-compose.yml and deploy.sh script to vm
        run: scp -i ~/.ssh/${{ env.SERVER_NAME }}.key docker-compose.yml deploy.sh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/charp/${{ env.PROJECT_ID }}

      - name: Get into project directory, make deploy script executable and run it
        run: ssh ${{ env.SERVER_NAME}} 'cd /home/charp/${{ env.PROJECT_ID }} && chmod +x deploy.sh && ./deploy.sh'
